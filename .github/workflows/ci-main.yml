name: CI/CD Workflow for Web, Android, and Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install Node.js latest version
      uses: actions/setup-node@v2
      with:
        node-version: 'latest'

    - name: Install TypeScript
      run: npm install -g typescript

    - name: Install dependencies
      run: |
        npm ci
        npm install -g yarn
        yarn install

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v2

    - name: Run TypeScript checks
      run: tsc --noEmit

    - name: Run unit tests
      run: npm test

    - name: Run E2E tests
      run: npm run test:e2e

  build-web:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Build Web App
      run: yarn build

  deploy-web-vercel:
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}

  deploy-web-github-pages:
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Export static files for GitHub Pages
      run: yarn next export
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./out

  deploy-web-firebase:
    runs-on: ubuntu-latest
    needs: build-web
    steps:
    - uses: actions/checkout@v2
    - name: Set up Firebase CLI
      uses: w9jds/firebase-action@v2.2.3
      with:
        args: deploy --only hosting
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

  build-android:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Install Android dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y android-sdk

    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleRelease

  deploy-android-play-store:
    runs-on: ubuntu-latest
    needs: build-android
    steps:
    - name: Upload to Google Play
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: ${{ secrets.GOOGLE_PLAY_JSON_KEY }}
        packageName: "com.yourapp.package"
        releaseFiles: android/app/build/outputs/apk/release/app-release.apk
        track: production

  build-windows:
    runs-on: windows-latest
    needs: setup
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: npm ci

    - name: Build Windows App (Electron)
      run: |
        npm run build:win

  deploy-windows-microsoft-store:
    runs-on: windows-latest
    needs: build-windows
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to Microsoft Store
      uses: microsoft/app-store-publish@v1
      with:
        app_id: ${{ secrets.MICROSOFT_APP_ID }}
        package_path: path/to/windows/installer/installer.msix
        client_id: ${{ secrets.MS_CLIENT_ID }}
        client_secret: ${{ secrets.MS_CLIENT_SECRET }}
        tenant_id: ${{ secrets.MS_TENANT_ID }}
