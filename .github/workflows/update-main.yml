name: CI/CD Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install Node.js latest version
      uses: actions/setup-node@v2
      with:
        node-version: 'latest'

    - name: Install TypeScript
      run: npm install -g typescript

    - name: Install dependencies with npm
      run: npm ci

    - name: Install Yarn
      run: npm install -g yarn

    - name: Install dependencies with Yarn
      run: yarn install

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js latest
      uses: actions/setup-node@v2
      with:
        node-version: 'latest'

    - name: Install dependencies with npm
      run: npm ci

    - name: Install dependencies with Yarn
      run: yarn install

    - name: Run TypeScript compile check
      run: tsc --noEmit

    - name: Run unit tests
      run: npm test

    - name: Run E2E tests
      run: npm run test:e2e

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js latest
      uses: actions/setup-node@v2
      with:
        node-version: 'latest'

    - name: Install dependencies with npm
      run: npm ci

    - name: Install dependencies with Yarn
      run: yarn install

    - name: Build project
      run: npm run build

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}

  deploy-github-pages:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2

    - name: Build GitHub Pages output
      run: npm run build -- --output-path=public

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public

  deploy-google-cloud:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
        service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
        export_default_credentials: true

    - name: Deploy to Google Cloud
      run: |
        gcloud app deploy --quiet
